const {createServer} = require('http')
const Websocket = require('ws')
const compile = require('./helpers/c/exec')
const createUserDir = require('./config/createUserDir')
const appendCode = require('./helpers/c/appendC')
const express = require('express')
const {exec} = require('child_process')


const app = express()
const server = createServer(app)
const wss = new Websocket.Server({server})
const port = 8001

wss.getID = ()=>{
    function generator(){
        return Math.floor((Math.random()+1)*0x10000).toString(16)
    }
    return generator()+generator()
}

wss.on('connection', socket =>{
    console.log('new client connected');
    //create new userID and create Directory for use
    socket.id = wss.getID()
    createUserDir.createDir(socket.id)
    //console.log(socket.id);
    //send userID generated by server to user
    //socket.send(socket.id);

    socket.on('message', code=>{
        //message will be string, no need to parse JSON
        appendCode.appendCode(code,socket.id);
        console.log(`appended code : ${code}`);
    })
})
app.get('/getDir/:id',async (req,res)=>{
    const { id } = req.params
    //user data path in linux
    const path = `/var/lib/capstonedata/${id}`
    //windows test path
    const pathWin = `dir`
    let output = await lsDir()
    res.status(200).send(output) 
})
const lsDir = ()=>{
    return new Promise((resolve,reject)=>{
        exec(`${path}`,(err,stdout,stderr)=>{
            if(err){
                reject(err)
            }
            if(stderr){
                reject(stderr)
            }
            else resolve(stdout)
        })
    })
}

server.listen(port, ()=> {
    console.log(`listening on port: ${port}`);
})

module.exports.app = app
